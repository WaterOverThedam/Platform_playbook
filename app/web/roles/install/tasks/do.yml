- name: 应用HTML目录
  debug: var=run_path

- name: 应用HTML临时目录
  debug: var=tmp_run_path

- name: 删除应用HTML临时目录
  file:
      path: "{{ tmp_run_path }}"
      state: absent
  no_log: true
  become: yes
  tags: ['install']

- name: 生成应用HTML目录
  file:
      path: "{{ item.path }}"
      state: directory
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "{{ item.mode }}"
  with_items:
      - { path: '{{ web_info.rootRunFolder }}', owner: 'winning', group: 'winning', mode: '0755' }
  become: yes
  when: web_info.rootRunFolder is defined
  tags: ['install']

- name: 删除子模块HTML目录
  file:
      path: "{{ item }}"
      state: absent
  with_items: "{{web_info.subModulePaths}}"
  when: web_info.subModulePaths is defined and (web_info.subModulePaths|length>0)
  become: yes
  tags: ['install']

- name: 生成应用HTML目录
  file:
      path: "{{ item.path }}"
      state: directory
      owner: "{{ item.owner }}"
      group: "{{ item.group }}"
      mode: "{{ item.mode }}"
  with_items:
      - { path: '{{ run_path }}', owner: 'winning', group: 'winning', mode: '0755' }
      - { path: '{{ tmp_run_path }}', owner: 'winning', group: 'winning', mode: '0755' }
  become: yes
  tags: ['install']

- name: svn部署方式，从svn仓库拉取到部署文件夹下
  shell: "svn checkout  {{web_info.svnPath }} {{ tmp_run_path }} --username {{web_info.svnUsername}} --password {{web_info.svnPass}} --non-interactive --trust-server-cert --no-auth-cache --force  warn=False"
  register: shell_out
  when: install_type == 'svn'
  tags: ['install']
- debug: var=shell_out.stderr_lines

- name: 拷贝HTML文件到HTML目录
  shell: 'cp -R {{ tmp_run_path }}/* {{ web_info.rootRunFolder }}/'
  register: shell_out
  when: web_info.rootRunFolder is defined and web_info.rootRunFolder != run_path
  tags: ['install']

- name: 移动HTML文件到指定目录
  shell: 'mv {{ tmp_run_path }}/* {{ run_path }}/'
  register: shell_out
  tags: ['install']

- name: 前端nginx配置部署
  copy:
      content: "{{ item.confstr }}"
      dest: "/winning/winmid/nginx/conf/default.d/{{ item.programname }}.conf"
      owner: winning
      group: winning
      mode: 0755
  with_items: "{{web_info.nginxBacks}}"
  no_log: true
  tags: ['install']

- name: 后端nginx配置部署
  copy:
      content: "{{ item.confstr }}"
      dest: "/winning/winmid/nginx/conf/default.d/{{ item.code }}.conf"
      owner: winning
      group: winning
      mode: 0755
  with_items: "{{web_info.nginxLocations}}"
  no_log: true
  tags: ['install']

- name: upstream配置部署
  copy:
      content: "{{ item.confstr }}"
      dest: "/winning/winmid/nginx/conf/vhost/{{ item.code }}.conf"
      owner: winning
      group: winning
      mode: 0755
  with_items: "{{web_info.upstreams}}"
  when: web_info.upstreams is defined and (web_info.upstreams|length>0)
  no_log: true
  tags: ['install']

- name: 删除http.conf文件
  file:
      path: "/winning/winmid/nginx/conf/vhost/https.conf"
      state: absent
  when: web_info.nginxFrontBacks is defined and (web_info.nginxFrontBacks|length>0)
  tags: ['install']

- name: 创建http.conf文件
  file:
      path: "/winning/winmid/nginx/conf/vhost/https.conf"
      state: touch
      owner: winning
      group: winning
      mode: 0755
  when: web_info.nginxFrontBacks is defined and (web_info.nginxFrontBacks|length>0)
  tags: ['install']

- name: 端口监控配置部署
  lineinfile:
      line: "{{ item.confstr }}"
      dest: /winning/winmid/nginx/conf/vhost/https.conf
  with_items: "{{web_info.nginxFrontBacks}}"
  when: web_info.nginxFrontBacks is defined and (web_info.nginxFrontBacks|length>0)
  no_log: true
  tags: ['install']

- name: nginx服务重启
  shell: 'systemctl restart nginx'
  become: yes
  tags: ['install']
